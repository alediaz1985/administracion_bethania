# Generated by Django 5.0.6 on 2025-10-20 18:07

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administracion_alumnos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComprobantePago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca_temporal', models.DateTimeField()),
                ('email', models.EmailField(max_length=255)),
                ('url_comprobante', models.URLField(max_length=500)),
                ('cuil_alumno', models.CharField(max_length=20)),
                ('cuil_responsable', models.CharField(max_length=20)),
                ('ruta_local', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Comprobante externo',
                'verbose_name_plural': 'Comprobantes externos',
                'db_table': 'comprobantes_pago',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=120)),
                ('tipo', models.CharField(choices=[('BECA', 'Beca'), ('HERMANOS', 'Descuento por hermanos'), ('MANUAL', 'Descuento manual')], default='MANUAL', max_length=20)),
                ('porcentaje', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('monto_fijo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('prioridad', models.PositiveSmallIntegerField(default=100, help_text='Menor número ⇒ se aplica primero')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Beneficio/Descuento',
                'verbose_name_plural': 'Beneficios/Descuentos',
                'db_table': 'beneficios',
                'ordering': ['prioridad', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CicloLectivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(unique=True, verbose_name='Año Lectivo')),
                ('fecha_inicio', models.DateField(verbose_name='Inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fin')),
            ],
            options={
                'verbose_name': 'Ciclo lectivo',
                'verbose_name_plural': 'Ciclos lectivos',
                'db_table': 'ciclos_lectivos',
                'ordering': ['-anio'],
            },
        ),
        migrations.CreateModel(
            name='ComprobanteDrivePago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca_temporal', models.CharField(max_length=150)),
                ('correo_electronico', models.CharField(max_length=150)),
                ('comprobante_pago', models.CharField(max_length=150)),
                ('cuil_estudiante', models.CharField(max_length=50)),
                ('cuil_responsable_pago', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Comprobante (Drive)',
                'verbose_name_plural': 'Comprobantes (Drive)',
                'db_table': 'comprobantes_pago_drive',
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('monto_cuota_override', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Monto mensual (override)')),
                ('monto_inscripcion_override', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Inscripción (override)')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'cursos',
                'ordering': ['nivel__nombre', 'id'],
            },
        ),
        migrations.CreateModel(
            name='MedioPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Medio de pago',
                'verbose_name_plural': 'Medios de pago',
                'db_table': 'medios_pago',
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Nivel',
                'verbose_name_plural': 'Niveles',
                'db_table': 'niveles',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateField(auto_now_add=True)),
                ('monto_inscripcion', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inscripciones', to='cuotas.ciclolectivo')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inscripciones', to='cuotas.curso')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inscripciones', to='administracion_alumnos.estudiante')),
                ('nivel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inscripciones', to='cuotas.nivel')),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'db_table': 'inscripciones',
            },
        ),
        migrations.CreateModel(
            name='Cuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('monto_base', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monto_descuentos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('monto_recargos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_a_pagar', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pagada', models.BooleanField(default=False)),
                ('fecha_pago', models.DateTimeField(blank=True, null=True)),
                ('inscripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuotas', to='cuotas.inscripcion')),
            ],
            options={
                'verbose_name': 'Cuota',
                'verbose_name_plural': 'Cuotas',
                'db_table': 'cuotas',
                'ordering': ['inscripcion__ciclo__anio', 'inscripcion__curso__nivel__nombre', 'mes'],
            },
        ),
        migrations.CreateModel(
            name='BeneficioInscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desde', models.DateField(blank=True, null=True)),
                ('hasta', models.DateField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('beneficio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cuotas.beneficio')),
                ('inscripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficios', to='cuotas.inscripcion')),
            ],
            options={
                'verbose_name': 'Beneficio de inscripción',
                'verbose_name_plural': 'Beneficios de inscripción',
                'db_table': 'beneficios_inscripcion',
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='nivel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cursos', to='cuotas.nivel'),
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pago', models.DateTimeField(auto_now_add=True)),
                ('monto_pagado', models.DecimalField(decimal_places=2, max_digits=10)),
                ('comentario', models.TextField(blank=True, null=True)),
                ('cuota', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagos', to='cuotas.cuota')),
                ('medio_pago', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cuotas.mediopago')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'db_table': 'pagos',
            },
        ),
        migrations.CreateModel(
            name='TarifaNivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_inscripcion', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monto_cuota_mensual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarifas_nivel', to='cuotas.ciclolectivo')),
                ('nivel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tarifas', to='cuotas.nivel')),
            ],
            options={
                'verbose_name': 'Tarifa por nivel',
                'verbose_name_plural': 'Tarifas por nivel',
                'db_table': 'tarifas_nivel',
            },
        ),
        migrations.CreateModel(
            name='VencimientoMensual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('dia_ultimo_sin_recargo', models.PositiveSmallIntegerField(help_text='Día máximo para pagar sin recargo', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('recargo_porcentaje', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Porcentaje a aplicar fuera de término', max_digits=5)),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vencimientos', to='cuotas.ciclolectivo')),
            ],
            options={
                'verbose_name': 'Vencimiento mensual',
                'verbose_name_plural': 'Vencimientos mensuales',
                'db_table': 'vencimientos_mensuales',
                'ordering': ['ciclo__anio', 'mes'],
            },
        ),
        migrations.AddIndex(
            model_name='cuota',
            index=models.Index(fields=['inscripcion', 'mes'], name='cuotas_inscrip_5346f0_idx'),
        ),
        migrations.AddIndex(
            model_name='cuota',
            index=models.Index(fields=['pagada'], name='cuotas_pagada_3f178d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cuota',
            unique_together={('inscripcion', 'mes')},
        ),
        migrations.AddIndex(
            model_name='beneficioinscripcion',
            index=models.Index(fields=['inscripcion', 'activo'], name='beneficios__inscrip_bf0daf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='beneficioinscripcion',
            unique_together={('inscripcion', 'beneficio')},
        ),
        migrations.AddIndex(
            model_name='inscripcion',
            index=models.Index(fields=['ciclo', 'nivel', 'curso'], name='inscripcion_ciclo_i_5998fa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inscripcion',
            unique_together={('estudiante', 'ciclo')},
        ),
        migrations.AlterUniqueTogether(
            name='curso',
            unique_together={('nivel', 'nombre')},
        ),
        migrations.AddIndex(
            model_name='pago',
            index=models.Index(fields=['fecha_pago'], name='pagos_fecha_p_8536b9_idx'),
        ),
        migrations.AddIndex(
            model_name='tarifanivel',
            index=models.Index(fields=['ciclo', 'nivel'], name='tarifas_niv_ciclo_i_1bfe7e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tarifanivel',
            unique_together={('ciclo', 'nivel')},
        ),
        migrations.AlterUniqueTogether(
            name='vencimientomensual',
            unique_together={('ciclo', 'mes')},
        ),
    ]
